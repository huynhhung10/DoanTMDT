@inject ICategoryService CategoryService
@inject IProductService ProductService
@inject IBrandService BrandService
@implements IDisposable


<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">DoanTMDT</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        
       

          <li class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="()=>submenuCategory= !submenuCategory">
                        <span class="oi oi-aperture" aria-hidden="true"></span> Categories List
                    </NavLink>
                          @if (submenuCategory){
                              @foreach (var category in CategoryService.Categorys){
                                  var i =1;
                                  <li class="nav-item px-3" style="margin-right:12px">
                                      <NavLink class="navbar-expand" href="@($"ProductbyCategory/category/{category.Url}/1")">
                                          @category.Name
                                          </NavLink>
                                          </li>
                              }
                          }   
                          </li>
        
      

        <li class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="()=>submenuBrand= !submenuBrand">
                        <span class="oi oi-tags" aria-hidden="true"></span> Brands List
                    </NavLink>
                    @if (submenuBrand)
                    {
                        @foreach (var brand in BrandService.Brands){
                            <li class="nav-item px-4" >
                                <NavLink class="navbar-expand" href="@($"ProductbyBrand/brand/{brand.BrandUrl}/1")">
                                    @brand.BrandName
                                    </NavLink>
                                    </li>
                        }
                    }
                    </li>


                    <AuthorizeView Roles="Customer">
            <Authorized>
         <li class="nav-item px-3">
                    <NavLink class="nav-link" href="orders">
                        <span class="oi oi-media-play" aria-hidden="true"></span> Order
                    </NavLink>
                </li>0


                  </Authorized>
        </AuthorizeView>
         <AuthorizeView Roles="Admin">
            <Authorized>
         <li class="nav-item px-3">
                    <NavLink class="nav-link" href="/ProductList">
                        <span class="oi oi-media-play" aria-hidden="true"></span> Product
                    </NavLink>
                </li>

                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="/Admin/Brands">
                        <span class="oi oi-aperture" aria-hidden="true"></span> Brand
                    </NavLink>
                </li>

                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="/Admin/Categories">
                        <span class="oi oi-box" aria-hidden="true"></span> Category
                    </NavLink>
                </li>

                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="/Admin/Editions">
                        <span class="oi oi-paperclip" aria-hidden="true"></span> Edition
                    </NavLink>
                </li>

                  </Authorized>
        </AuthorizeView>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool submenuCategory;
     private bool submenuBrand;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.GetCategories();
        CategoryService.OnChange += StateHasChanged;
        await BrandService.GetBrands();
        BrandService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CategoryService.OnChange -= StateHasChanged;
        BrandService.OnChange -= StateHasChanged;
    }
}
