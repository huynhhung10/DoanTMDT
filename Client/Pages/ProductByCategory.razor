@page "/ProductbyCategory"
@page "/ProductbyCategory/search/{searchText}/{page:int}"
@page "/ProductbyCategory/category/{categoryUrl}/{page:int}"

@inject ICategoryService CategoryService;
@inject IProductService ProductService


@if (searchText == null && categoryUrl == null && brandUrl == null)
{
    <AllProducts />
}
else
{ <ProductListCategory />
  
}

   


@code {
    [Parameter]
    public string? categoryUrl { get; set; } = null;
    [Parameter]
    public string? brandUrl { get; set; } = null;

    [Parameter]
    public string? searchText { get; set; } = null;

    [Parameter]
    public int page { get; set; } = 1;

    private Category category = null;
    protected override async Task OnParametersSetAsync()
    {
        if (searchText != null)
        {
            await ProductService.SearchProducts(searchText, page);
        }
        else if (brandUrl !=null){
            await ProductService.PagesBrand(brandUrl, page);
            
        }
    else 
        {
            await ProductService.PagesCategory(categoryUrl , page);
        }
      
        
       
    }
}